<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
        >
    
    <context:component-scan base-package="com.atguigu.bk.controller" />
    <!--hint: 如果不采用注解方式，则对于地址映射需要在此以bean的形式进行配置-->

    <!--视图解析器-->
    <bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views"></property>
    </bean>

    <!--文件解析器-->
    <!--hint：为了能够保证spring能解析上传的文件-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="102400" /><!--最大上传量为100k-->
    </bean>

    <!--异常解析器-->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <!--hint：出现异常未处理，会存到exception中，跳转到相应页面。可以在error.jsp中使用${exception.message}取出-->
                <!--捕获所有异常，Throwable，意味着就算代码部分我们没有catch异常，这个异常解析器也会处理-->
                <prop key="java.lang.Throwable">/error.jsp</prop>

                <!--捕获特定异常，内容超出范围异常的对应跳转-->
                <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">/error/OverMaxUploadSize.jsp</prop>
            </props>
        </property>
    </bean>

    <!--映射器、适配器，和拦截器-->
    <bean id="handlerMapping" class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
    <!--hint：RequestMappingHandlerMapping，实现了HandlerMapping接口，重要方法HandlerExecutionChain getHandler(HttpServletRequest request)-->
    <!--
    hint：在未配置该handlerMapping之前，程序也正常，原因在于：
    hint：1）多个映射器可以并存，前端控制器判断url能让哪些映射器映射，就让正确的映射器处理；
    hint：2）默认加载的处理器映射器有两个：第一个是根据Bean的名字URL的映射器，第二个是默认的注解处理器映射器
    hint：3）所以要配置配套的映射器和适配器，也可以用<mvc:annotation-driven />自动加载加载RequestMappingHandlerMapping和RequestMappingHandlerAdapter
    -->
        <property name="interceptors">
            <list>
                <ref bean="officeHoursInterceptor"/>
            </list>
        </property>
    </bean>
    <bean id="officeHoursInterceptor" class="com.atguigu.bk.intercept.TimeBaseAccessInterceptor">
        <property name="openingTime" value="9"></property>
        <property name="closingTIme" value="18"></property>
    </bean>

    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"></bean>

</beans>